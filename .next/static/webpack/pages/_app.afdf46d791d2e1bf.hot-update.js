"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./lib/localDb.tsx":
/*!*************************!*\
  !*** ./lib/localDb.tsx ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalDbProvider: function() { return /* binding */ LocalDbProvider; },\n/* harmony export */   getPlateVote: function() { return /* binding */ getPlateVote; },\n/* harmony export */   updatePlateVote: function() { return /* binding */ updatePlateVote; },\n/* harmony export */   useLocalDb: function() { return /* binding */ useLocalDb; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n// Function to get the upvotes/downvotes for a specific plate number and track user vote\nconst getPlateVote = (plateNumber, userId)=>{\n    const savedPlateVotes = localStorage.getItem(\"plateVotes\");\n    const plateVotes = savedPlateVotes ? JSON.parse(savedPlateVotes) : {};\n    const plateVote = plateVotes[plateNumber] || {\n        upvotes: 0,\n        downvotes: 0,\n        users: {}\n    };\n    // Ensure userId is provided before trying to access userVote\n    const userVote = userId ? plateVote.users[userId] || null : null;\n    return {\n        upvotes: plateVote.upvotes,\n        downvotes: plateVote.downvotes,\n        userVote\n    };\n};\n// Function to update the upvotes/downvotes and track user vote\nconst updatePlateVote = (plateNumber, userId, type)=>{\n    // Ensure that userId is defined\n    if (!userId) {\n        console.error(\"Error: userId is undefined\");\n        return;\n    }\n    const savedPlateVotes = localStorage.getItem(\"plateVotes\");\n    const plateVotes = savedPlateVotes ? JSON.parse(savedPlateVotes) : {};\n    // Initialize currentVotes for the plate if it doesn't exist\n    const currentVotes = plateVotes[plateNumber] || {\n        upvotes: 0,\n        downvotes: 0,\n        users: {}\n    };\n    // Ensure users is an object (initialize if not present)\n    currentVotes.users = currentVotes.users || {};\n    const currentUserVote = currentVotes.users[userId]; // Get user's current vote\n    if (currentUserVote === type) {\n        // If the user is undoing their vote (voting the same type again), remove their vote\n        if (type === \"upvote\") {\n            currentVotes.upvotes = Math.max(0, currentVotes.upvotes - 1);\n        } else if (type === \"downvote\") {\n            currentVotes.downvotes = Math.max(0, currentVotes.downvotes - 1);\n        }\n        delete currentVotes.users[userId]; // Remove user's vote record\n    } else {\n        // If the user is switching votes or voting for the first time\n        if (currentUserVote === \"upvote\") {\n            currentVotes.upvotes = Math.max(0, currentVotes.upvotes - 1); // Undo the previous upvote\n        } else if (currentUserVote === \"downvote\") {\n            currentVotes.downvotes = Math.max(0, currentVotes.downvotes - 1); // Undo the previous downvote\n        }\n        // Apply the new vote\n        if (type === \"upvote\") {\n            currentVotes.upvotes += 1;\n        } else if (type === \"downvote\") {\n            currentVotes.downvotes += 1;\n        }\n        currentVotes.users[userId] = type; // Store the user's vote type\n    }\n    plateVotes[plateNumber] = currentVotes;\n    localStorage.setItem(\"plateVotes\", JSON.stringify(plateVotes)); // Save updated votes to localStorage\n};\nconst LocalDbContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction LocalDbProvider(param) {\n    let { children } = param;\n    _s();\n    const [comments, setComments] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [upvotedCommentsByUser, setUpvotedCommentsByUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const savedComments = localStorage.getItem(\"comments\");\n        const savedUpvotes = localStorage.getItem(\"upvotedCommentsByUser\");\n        if (savedComments) {\n            setComments(JSON.parse(savedComments));\n        }\n        if (savedUpvotes) {\n            setUpvotedCommentsByUser(JSON.parse(savedUpvotes));\n        }\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        localStorage.setItem(\"comments\", JSON.stringify(comments));\n        localStorage.setItem(\"upvotedCommentsByUser\", JSON.stringify(upvotedCommentsByUser));\n    }, [\n        comments,\n        upvotedCommentsByUser\n    ]);\n    const addComment = async (comment)=>{\n        const newComment = {\n            ...comment,\n            id: Date.now().toString(),\n            createdAt: new Date(),\n            upvotes: 0,\n            upvotedBy: []\n        };\n        setComments((prevComments)=>[\n                ...prevComments,\n                newComment\n            ]);\n    };\n    const updateComment = async (id, content)=>{\n        setComments((prevComments)=>prevComments.map((comment)=>comment.id === id ? {\n                    ...comment,\n                    content\n                } : comment));\n    };\n    const deleteComment = (id)=>{\n        setComments((prevComments)=>prevComments.filter((comment)=>comment.id !== id));\n    };\n    const getCommentsByPlate = (plateNumber)=>{\n        return comments.filter((comment)=>comment.plateNumber === plateNumber);\n    };\n    const getCommentsByUser = (userId)=>{\n        return comments.filter((comment)=>comment.userId === userId);\n    };\n    const upvoteComment = (id, userId)=>{\n        setComments((prevComments)=>prevComments.map((comment)=>comment.id === id ? {\n                    ...comment,\n                    upvotes: comment.upvotes + 1,\n                    upvotedBy: Array.from(new Set([\n                        ...comment.upvotedBy || [],\n                        userId\n                    ]))\n                } : comment));\n        setUpvotedCommentsByUser((prev)=>({\n                ...prev,\n                [userId]: Array.from(new Set([\n                    ...prev[userId] || [],\n                    id\n                ]))\n            }));\n    };\n    const downvoteComment = (id, userId)=>{\n        setComments((prevComments)=>prevComments.map((comment)=>comment.id === id ? {\n                    ...comment,\n                    upvotes: Math.max(0, comment.upvotes - 1),\n                    upvotedBy: comment.upvotedBy.filter((upvoter)=>upvoter !== userId)\n                } : comment));\n        setUpvotedCommentsByUser((prev)=>({\n                ...prev,\n                [userId]: (prev[userId] || []).filter((upvotedId)=>upvotedId !== id)\n            }));\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(LocalDbContext.Provider, {\n        value: {\n            comments,\n            addComment,\n            updateComment,\n            deleteComment,\n            getCommentsByPlate,\n            upvoteComment,\n            downvoteComment,\n            getCommentsByUser,\n            upvotedCommentsByUser,\n            getPlateVote,\n            updatePlateVote\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/cory.wynn/Desktop/license-plate/lib/localDb.tsx\",\n        lineNumber: 194,\n        columnNumber: 5\n    }, this);\n}\n_s(LocalDbProvider, \"8conrwh3eP9EfCV175yOyJCloWw=\");\n_c = LocalDbProvider;\nfunction useLocalDb() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(LocalDbContext);\n    if (context === undefined) {\n        throw new Error(\"useLocalDb must be used within a LocalDbProvider\");\n    }\n    return context;\n}\n_s1(useLocalDb, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"LocalDbProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/localDb.tsx\n"));

/***/ })

});